Требуется:
Создать приложение для скачивания новостных статей

Источник:
В качестве источника новостей использовать REST API: https://api.spaceflightnewsapi.net/documentation#/Article/get_v3_articles

Описание:
Данное описание является исчерпывающим и не требует каких-либо уточнений. Если в процессе выполнения задания у соискателя появляются какие-либо 
вопросы, просьба решить их по своему собственному усмотрению.

Для выполнения задания потребуется использование REST API:
Метод URL Описание
GET https://api.spaceflightnewsapi.net/v3/articles?_limit={articles_limit}&_start={skipped_articles}
Загружает информацию о новостных статьях.
Используемые параметры:
_limit - лимит на количество одновременно загружаемых записей
_start - сколько записей будет пропущено начиная с первой
Пример ответа:
[{
 "id": 14371,
 "title": "Firefly raises $75 million as it prepares for second launch",
 "url": "https://spacenews.com/firefly-raises-75-million-as-it-preparesfor-second-launch/",
 "imageUrl": "https://spacenews.com/wp-content/uploads/2021/09/alphaprelaunch.jpg",
 "newsSite": "SpaceNews",
 "summary": "Launch vehicle developer Firefly Aerospace has raised $75 
million in a new funding round as the company, now under new ownership, 
prepares for a second launch of its Alpha rocket this spring.",
 "publishedAt": "2022-03-23T11:19:17.000Z",
 "updatedAt": "2022-03-23T11:19:17.120Z",
 "featured": false,
 "launches": [],
 "events": []
 }]
 
Требуется создать приложение, выполняющее следующие функции:

Реализовать Скачивание новостей:
Для новостных статей должна быть подготовлена таблица ARTICLES в базе данных:
Идентификатор статьи - id
Название статьи - title 
Новостной сайт - news_site
Дата публикации - published_date 
Содержимое статьи - article

При старте приложения должен создаваться пул потоков (количество потоков должно быть настраиваемым). Потоки из данного пула должны 
параллельно скачивать информацию о новостных статьях (использовать API, описанное выше).
Общее количество скачиваемых записей, а также количество записей, скачиваемых одним потоком за один цикл работы, должно быть 
настраиваемым.
Создать настраиваемый "Черный список новостей". Он должен представлять из себя список слов. Если какое-либо из слов входит в название статьи 
(поле title), то эта статья должна быть исключена из дальнейшей обработки.
Полученные записи должны быть отсортированы по дате публикации (поле publishedAt).
После сортировки записи должны быть сгруппированы по названию новостного сайта (поле newsSite).
Создать буфер для накопления сгруппированных статей. Буфер должен быть общим для всего пула потоков.
Каждый раз, когда поток помещает записи в буфер, должна происходить проверка количества записей в буфере для каждого новостного сайта. Если 
количество записей в буфере больше или равно заданного (настраиваемого) лимита, то необходимо:
-взять все записи для данного новостного сайта
-скачать содержимое статей, используя поле url
-поместить всю необходимую информацию для скачанных статей в таблицу ARTICLES
-записи о скачанных статьях должны быть удалены из буфера
Данный механизм должен запускаться в случае, если скачаны все необходимые записи, независимо от достижения лимита.

Реализовать API по выдаче новостных статей:
Реализовать HTTP API по выдаче новостных статей, который :
-Выдает все сохраненные в БД статьи
-Даёт возможность запросить конкретную статью по идентификатору
-Даёт возможность запросить список статей по новостному сайту


Используемые технологии и прочие требования:
Самая свежая версия Java (https://openjdk.java.net/)
Любые инструменты из экосистемы Spring (Spring boot, Spring MVC и т.д.)
Хостинг исходного кода Github. Приложение должно быть доступно по прямой ссылке
Легковесная SQL БД, рекомендуется использовать H2
Использование прочих библиотек и фрэймворков не возбраняется
Приложение должно компилироваться и исполняться без ошибок, выполняя свои функции в соответствии с заданием